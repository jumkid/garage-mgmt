spring.application.name = garage-mgmt
spring.application.version = @project.version@
spring.application.description = garage management spring boot service
spring.application.title = Restful API

# spring boot profiles
spring.profiles.active = pdt
spring.output.ansi.enabled = ALWAYS

# ----------------------------------------
# APPLICATION SERVER PROPERTIES
# ----------------------------------------
server.port = 8087
server.servlet.context-path = /
server.ssl.enabled = false
server.ssl.key-store = ../keystore.p12
# Whether response compression is enabled.
server.compression.enabled = false
server.servlet.encoding.force = true
server.servlet.encoding.charset = UTF-8
# Comma-separated list of MIME types that should be compressed.
server.compression.mime-types = text/html,text/xml,text/plain,text/css,text/javascript,application/javascript
# Minimum "Content-Length" value that is required for compression to be performed.
server.compression.min-response-size = 2048

# ----------------------------------------
# Database Migration
# ----------------------------------------
spring.flyway.enabled = true
spring.flyway.baseline-on-migrate = true
spring.flyway.depends-on = entityManagerFactory
spring.main.allow-circular-references = true

# ----------------------------------------
# JPA
# ----------------------------------------
# spring.sql.init.mode = always
# spring.sql.init.data-locations = classpath:db/data.sql
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = none
spring.jpa.defer-datasource-initialization = false
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.cache.use_second_level_cache = true
spring.jpa.properties.hibernate.cache.use_query_cache = true
spring.jpa.properties.hibernate.cache.region.factory_class = org.redisson.hibernate.RedissonRegionFactory
spring.jpa.properties.hibernate.cache.redisson.config = redission.yaml

# DB connection
spring.datasource.driverClassName = org.postgresql.Driver
spring.datasource.url = ${POSTGRES_DB_CONNECTION}
spring.datasource.username = ${POSTGRES_DB_USERNAME}
spring.datasource.password = ${POSTGRES_DB_PASSWORD}

# ----------------------------------------
# logging
# ----------------------------------------
logging.level.root = WARN
logging.level.org.springframework.security = INFO
logging.level.com.jumkid.share = DEBUG
logging.level.com.jumkid.garage = DEBUG
logging.pattern.console = %clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr([JID:%X{Journey-ID}]){faint} %clr(---){faint} %clr([%8.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n

# ----------------------------------------
# API Documentation
# ----------------------------------------
springdoc.api-docs.path=/api-docs

# ----------------------------------------
# jumkid security properties
# ----------------------------------------
# enable spring security token filter
com.jumkid.jwt.token.enable = true
com.jumkid.jwt.token.validate = false
com.jumkid.jwt.token.client-id = ${KEYCLOAK_CLIENT_ID}
com.jumkid.jwt.token.fetch-url = http://keycloak:8080/realms/jumkid/protocol/openid-connect/token
com.jumkid.jwt.token.introspect-url = http://keycloak:8080/realms/jumkid/protocol/openid-connect/userinfo
com.jumkid.api.user-info = http://${API_GATEWAY_HOST}:${API_GATEWAY_PORT}/v1/user